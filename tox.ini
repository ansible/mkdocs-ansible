# spell-checker:ignore linkcheck basepython changedir envdir envlist envname envsitepackagesdir passenv setenv testenv toxinidir toxworkdir usedevelop doctrees envpython posargs
[tox]
minversion = 4.0.0
envlist =
  lint
  pkg
  docs

[testenv]
passenv =
  CURL_CA_BUNDLE  # https proxies, https://github.com/tox-dev/tox/issues/1437
  FORCE_COLOR
  HOME
  NO_COLOR
  PYTEST_*  # allows developer to define their own preferences
  PYTEST_REQPASS  # needed for CI
  PYTHON*  # PYTHONPYCACHEPREFIX, PYTHONIOENCODING, PYTHONBREAKPOINT,...
  PY_COLORS
  RTD_TOKEN
  REQUESTS_CA_BUNDLE  # https proxies
  SETUPTOOLS_SCM_DEBUG
  SSL_CERT_FILE  # https proxies
  SSH_AUTH_SOCK # may be needed by git when running with progressive
  LANG
  LC_*
setenv =

  COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
  COVERAGE_PROCESS_START={toxinidir}/pyproject.toml
  PIP_CONSTRAINT = {toxinidir}/.config/requirements.txt
  devel,pkg: PIP_CONSTRAINT = /dev/null
  PIP_DISABLE_PIP_VERSION_CHECK = 1
  PRE_COMMIT_COLOR = always
  FORCE_COLOR = 1
allowlist_externals =
  sh

[testenv:lint]
description = Run all linters
# pip compile includes python version in output constraints, so we want to
# be sure that version does not change randomly.
basepython = python3.9
deps =
  pre-commit>=2.6.0
  setuptools>=51.1.1
  pytest>=7.2.0  # to updated schemas
skip_install = true
commands =
  {envpython} -m pre_commit run --all-files --show-diff-on-failure {posargs:}
passenv =
  {[testenv]passenv}
  PRE_COMMIT_HOME
setenv =
  {[testenv]setenv}
  # avoid messing pre-commit with out own constraints
  PIP_CONSTRAINT=
[testenv:deps]
description = Bump all test dependencies
# we reuse the lint environment
envdir = {toxworkdir}/lint
skip_install = true
basepython = python3.9
deps =
  {[testenv:lint]deps}
setenv =
  # without his upgrade would likely not do anything
  PIP_CONSTRAINT = /dev/null
commands =
  pre-commit run --all-files --show-diff-on-failure --hook-stage manual lock
  # Update pre-commit hooks
  pre-commit autoupdate
  # We fail if files are modified at the end
  git diff --exit-code

[testenv:docs]
description = Builds docs
extras =
  docs
setenv =
  # Disable colors until markdown-exec supports it:
  # https://github.com/pawamoy/markdown-exec/issues/11
  NO_COLOR = 1
  TERM = dump
skip_install = false
usedevelop = true
commands =
  mkdocs build {posargs:}

[testenv:pkg]
description =
  Build package, verify metadata, install package and assert behavior when ansible is missing.
deps =
  build >= 0.9.0
  twine >= 4.0.1
skip_install = true
# Ref: https://twitter.com/di_codes/status/1044358639081975813
commands =
  # build wheel and sdist using PEP-517
  {envpython} -c 'import os.path, shutil, sys; \
  dist_dir = os.path.join("{toxinidir}", "dist"); \
  os.path.isdir(dist_dir) or sys.exit(0); \
  print("Removing \{!s\} contents...".format(dist_dir), file=sys.stderr); \
  shutil.rmtree(dist_dir)'
  {envpython} -m build --outdir {toxinidir}/dist/ {toxinidir}
  # Validate metadata using twine
  twine check --strict {toxinidir}/dist/*
  # Install the wheel
  sh -c 'python3 -m pip install "mkdocs-ansible[lock] @ file://$(echo {toxinidir}/dist/*.whl)"'
  # Uninstall it
  python3 -m pip uninstall -y mkdocs-ansible
