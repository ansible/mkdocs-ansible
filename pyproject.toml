[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools >= 65.3.0", # required by pyproject+setuptools_scm integration and editable installs
  "setuptools_scm[toml] >= 7.0.5" # required for "no-local-version" scheme
]

[project]
authors = [{"email" = "info@ansible.com", "name" = "Ansible by Red Hat"}]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Web Environment",
  "Framework :: MkDocs",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: JavaScript",
  "Programming Language :: Python",
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: 3.12',
  'Programming Language :: Python :: 3.13',
  "Topic :: Documentation",
  "Topic :: Software Development :: Documentation",
  "Topic :: Text Processing :: Markup :: HTML"
]
description = "Ansible MkDocs Theme based on mkdocs-material"
dynamic = ["version", "dependencies", "optional-dependencies"]
keywords = ["ansible", "mkdocs", "theme"]
license = {text = "MIT"}
maintainers = [{"email" = "info@ansible.com", "name" = "Ansible by Red Hat"}]
name = "mkdocs-ansible"
readme = "docs/README.md"
requires-python = ">=3.10"

[project.entry-points."mkdocs.themes"]
ansible = "mkdocs_ansible"

[project.urls]
changelog = "https://github.com/ansible/mkdocs-ansible/releases"
documentation = "https://ansible.readthedocs.io/projects/mkdocs-ansible/"
homepage = "https://github.com/ansible/mkdocs-ansible"
repository = "https://github.com/ansible/mkdocs-ansible"

[tool.codespell]
# indention is a typo in ruamel.yaml's API
ignore-words-list = "indention"
skip = ".tox,.mypy_cache,build,.git,.eggs,pip-wheel-metadata"

# Keep this default because xml/report do not know to use load it from config file:
# data_file = ".coverage"
[tool.coverage.paths]
source = ["src", "test", ".tox/*/site-packages"]

[tool.coverage.report]
exclude_also = ["pragma: no cover", "if TYPE_CHECKING:"]
# Increase it just so it would pass on any single-python run
fail_under = 82
# During development we might remove code (files) with coverage data, and we dont want to fail:
ignore_errors = true
omit = ["test/*", "src/mkdocs_ansible/_version.py"]
show_missing = true
skip_covered = true
skip_empty = true

[tool.coverage.run]
# Do not use branch until bug is fixes:
# https://github.com/nedbat/coveragepy/issues/605
branch = false
concurrency = ["multiprocessing", "thread"]
parallel = true
source = ["src"]

[tool.mypy]
exclude = "(.config|build|dist|test/local-content|site-packages|~/.pyenv|examples/playbooks/collections|plugins/modules)"
# https://github.com/python/mypy/issues/12664
python_version = "3.10"
strict = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = ["mkdocs_ansible._version"]
warn_unused_ignores = false

[[tool.mypy.overrides]]
module = ["mkdocs_ansible"]
warn_unused_ignores = false # https://github.com/python/mypy/issues/13201

[tool.pylint.MASTER]
ignore-paths = "^src/.*/(_version|_vendor).*$"

[tool.pytest.ini_options]
addopts = "-p no:pytest_cov --durations=10 --durations-min=1.0 --failed-first"
testpaths = ["test"]

[tool.ruff]
cache-dir = "./.cache/.ruff"
exclude = [".config"]
fix = true
# Same as Black.
line-length = 88
preview = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.setuptools]
include-package-data = true

[tool.setuptools.dynamic]
dependencies = {file = [".config/requirements.in"]}
optional-dependencies.test = {file = [".config/requirements-test.in"]}

[tool.setuptools.package-data]
"*" = ["*.css", "*.html", "*.js"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
# To prevent accidental pick of mobile version tags such 'v6'
git_describe_command = [
  "git",
  "describe",
  "--dirty",
  "--long",
  "--tags",
  "--match",
  "v*.*"
]
local_scheme = "no-local-version"
tag_regex = "^(?P<prefix>v)?(?P<version>\\d+[^\\+]*)(?P<suffix>.*)?$"
write_to = "src/mkdocs_ansible/_version.py"

[tool.tomlsort]
in_place = true
sort_inline_tables = true
sort_table_keys = true

[tool.uv.pip]
annotation-style = "line"
custom-compile-command = "tox run -e deps"
no-emit-package = ["ansible-core", "pip", "resolvelib", "ruamel-yaml-clib", "uv"]
